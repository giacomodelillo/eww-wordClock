#!/bin/sh

leading_zero_fill ()
{
    # print the number as a string with a given number of leading zeros
    var="$(printf "%0$1d\\n" "$2" | sed 's/./& /g')"
    echo $var
}

screenshot() {
    
    if [ "$1" = "selection" ]
    then
        sleep 1
        grim -g "$(slurp -b 191a195c -c ffffff -d)"
    fi
    if [ "$1" = "full" ]
    then
        sleep 1
        grim -g "$(slurp -b 191a195c -c ffffff -d -o)"
    fi
    
}

hour() {
    hour=$(date +%I)
    echo $hour
}

minutes(){
    minutes=$(date +%M)
    echo $minutes
}

reboot(){
    systemctl reboot
}

shutdown(){
    
    while pgrep rclone
    do
        notify-send "Waiting Rclone to finish ..." -u normal
        sleep 2
    done
    
    systemctl poweroff
}

updates(){
    cmd=$(checkupdates | wc -l)
    echo "$(leading_zero_fill 3 "$cmd")"" 󰏔 "
}

volume(){
    cmd=$(pamixer --get-volume)
    
    if [ "$1" = "up" ]
    then
        pamixer -i 5
    fi
    if [ "$1" = "down" ]
    then
        pamixer -d 5
    fi
    
    is_true=$(pamixer --get-mute)
    if [ "$is_true" = true ]
    then
        echo "$(leading_zero_fill 3 "$cmd")"" 󰝟 "
    else
        
        echo "$(leading_zero_fill 3 "$cmd")"" 󰕾 "
    fi
}

is_past(){
    minutes=$(date +%M)
    
    if [ $minutes -gt "33" ]
    then
        echo false
    else
        echo true
    fi
}

bluetooth(){
    if bluetoothctl show | grep 'Powered: no' -q; then
        bluetoothctl power on
    else
        bluetoothctl power off
    fi
}

[ "$1" = "hour" ] && hour && exit
[ "$1" = "minutes" ] && minutes && exit
[ "$1" = "ip" ] && is_past && exit
[ "$1" = "updates" ] && updates && exit
[ "$1" = "volume" ] && volume "$2" && exit
[ "$1" = "reboot" ] && reboot && exit
[ "$1" = "shutdown" ] && shutdown && exit
[ "$1" = "screenshot" ] && screenshot "$2" && exit
[ "$1" = "bluetooth" ] && bluetooth && exit
exit